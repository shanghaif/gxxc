<template>
  <ui-page style="overflow-y: hidden;">
      <ui-view class=box_col style="{{ { height: height+ 'px'} }}">
          <ui-view class="box_col_auto">
              <ui-scroll-view scroll-y height="{{height}}" pull-down="{{ pullDown }}" pull-up="{{ pullUp }}">
                <ui-view class="content_list">
                  <ui-view style="background:#ffffff"
                  ui:for="{{ items }}">
                    <ui-row height="60" space-bottom="10">
                      <ui-col span="2" align="center" vertical-align="middle">
                          <ui-image src="../../static/img/bank/zd1.png" 
                          width="40" height="40"></ui-image>
                      </ui-col>
                      <ui-col span="9">
                          <ui-row space-top='10' height="50">
                              <ui-col span="6">
                                  <ui-view class="moneyTyp">
                                    充值
                                  </ui-view>
                              </ui-col>
                              <ui-col span="5" align="right">
                                200
                              </ui-col>
                          </ui-row>
                          <ui-row height="50">
                              <ui-col span="6">
                                2017-07-07 11:11:11
                              </ui-col>
                              <ui-col span="5" align="right">
                                处理成功
                              </ui-col>
                          </ui-row>
                      </ui-col>
                    </ui-row>
                    
                  </ui-view>
                </ui-view>
                <ui-view style="width:200px;margin:0 auto;">
                  <ui-divider ui:show="{{!loadMore}}">没有新数据了</ui-divider>
                </ui-view>
              </ui-scroll-view>
          </ui-view>
      </ui-view>

  </ui-page>
</template>

<script>
  export default {
    config: {
      navigationBarBackgroundColor:"#26a2ff",
      navigationBarTextStyle:"white",
      navigationBarTitleText:"我的账单",
      title:'我的团队',
      backgroundColor:'#f2f2f2',
      delay:false,//延迟加载
    },
    data () {
      return {
        height: ui.DEFAULT_CONTENT_HEIGHT,

        items: [],
        bottom: 30,
        pullDown: {
          distance: 50,
          onBegin: () => {},
          onActive: this.handleActive,
          onAfter: this.handlePullDownAfter
        },
        pullUp:{
          distance: 50,
          onBegin: () => {},
          onActive: this.handleLoadMore,
          onAfter: this.handlePullDownAfter
        },
        count:0,
        loadMore:true
      }
    },
    methods: {
      selt(){//类别选择

      },
      handleInput(){//search收索

      },
      getSeltItem(item,index){
        this.selectVal = item
        this.showMask=false
        console.log(item);
        console.log(index);
        
      },
      handleLoadMore () {
        this.count ++
        if(this.count > 10){
          this.loadMore = false
          return false
        }else{
          window.setTimeout(() => {
            for (let i = this.bottom + 1; i <= this.bottom + 10; i++) {
              this.items.push(`列表项目${i}`)
            }
            this.bottom += 10
          }, 1500)
        }
      },
      handleActive () {
        // 将返回的请求接管，实现让请求结果来控制下拉刷新的状态
        return ui.request({
          // promise设置为true，让请求返回promise，这样就可以接管请求
          // 请求结束后页面自动回弹
          promise: true,
          url: '/touchui-backstage/listInfo.do?state=1',
          success: (response) => {
          },
          fail: (err) => {
          }
        })
      },
      // 下拉结束后，执行的函数。因为只要下拉即时没有到达刷新的高度也会触发这个方法
      // flag 为1表示执行了handleActive。为undefined代表handleActive没有执行。
      handlePullDownAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理下拉刷新'
          })
        }
      },
      handlePullUpAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理上拉刷新'
          })
        }
      }
    },
    mounted () {
      for (let i = 1; i <= this.bottom; i++) {
        this.items.push(`列表项目${i}`)
      }
    } 
  }

</script>

<style lang="less">
    .moneyTyp{
      font-weight: 700;
      font-size: 30rpx;
    }
</style>