<!---->
<template>
  <ui-page style="overflow-y: hidden;">
      <ui-view class="box_col" style="{{ { height: pageHeight(46)+ 'px'} }}">
          <ui-view class="box_col_auto">
              <ui-view class="xlcSwiper">
                <ui-ex-swiper pagination speed="200" loop=true autoplay="{{ autoplay }}">  
                  <ui-ex-swiper-item ui:for="{{items}}" ui:for-item="item" ui:for-index="index">
                    <ui-image src="{{ item.src }}" mode="simple"></ui-image>
                    <ui-text class="slide-title">{{ item.title }}</ui-text>
                  </ui-ex-swiper-item>
                </ui-ex-swiper>
              </ui-view>

              <ui-view class="xlcMessSty">
                <ui-view class="tit">
                  {{xlcMss.schoolName}}
                </ui-view>
                <ui-row>
                  <ui-col  vertical-align="bottom">
                    <ui-view  class="messLeft">
                      ￥2600
                    </ui-view>
                  </ui-col>
                  <ui-col align="center" vertical-align="bottom">
                    <ui-view  class="messCenter">
                      原价:9999
                    </ui-view>
                  </ui-col>
                  <ui-col  align="right"  vertical-align="bottom">
                    <ui-view  class="messRight">
                      <ui-button type="primary" full-width="false" size="mini">
                        立即抢购
                      </ui-button>
                    </ui-view>
                  </ui-col>
                </ui-row>
              </ui-view>

              <!-- <ui-view class="JxData">
                  数据统计
              </ui-view> -->


              <ui-view class="MapMess">
                  <div id="allmap" style="{{{height:height+'px'}}}"></div>
              </ui-view>
              123
          </ui-view>

      </ui-view>
  </ui-page>
</template>

<script>
export default {
  config: {
    navigationBarBackgroundColor:"#26a2ff",
    navigationBarTextStyle:"white",
    navigationBarTitleText:"训练场详情",
    title:'训练场详情',
    backgroundColor:'#f2f2f2',
    delay:false,//延迟加载
  },
  data() {
    return {
      height:ui.WIN_WIDTH,
      autoplay: {
        delay: 2.5*1000
      },
      items: [{
        src: 'http://images.uileader.com/20171103/5906a28c-0f12-4b71-8df2-98791d8716f6.jpg',
        title: '放肆玩乐，轻巧办公'
      },
      {
        src: 'http://images.uileader.com/20171103/34795a1c-1365-4256-b9c1-6fb4af1de3da.jpg',
        title: '高温保护，一路驰骋'
      },
      {
        src: 'http://images.uileader.com/20171103/926a6fdc-80f6-4244-8354-860627c88115.jpg',
        title: '七夕好货，独家礼赠'
      }],
      mapPot:{
        lng:'116.404',//经度-180---+180
        lat:'39.915',//纬度-90-----+90

      },
      xlcMss:{}
    }
  },
  methods: {
    build(mapPot){
      var script = document.createElement("script")
      script.type = "text/javascript"
      var callbackName = '_callback'+Date.now()
      window[callbackName]= function(){
        console.log(BMap)
        var map = new BMap.Map("allmap");    // 创建Map实例
        map.centerAndZoom(new BMap.Point(mapPot.lng,mapPot.lat), 11);  // 初始化地图,设置中心点坐标和地图级别
        var point = new BMap.Point(mapPot.lng,mapPot.lat);
        map.centerAndZoom(point, 15);    
        var marker = new BMap.Marker(point,);
        map.addOverlay(marker);     
        //添加地图类型控件
        map.addControl(new BMap.MapTypeControl({
          mapTypes:[
                  BMAP_NORMAL_MAP
                  // BMAP_HYBRID_MAP
              ]}));   
        map.setCurrentCity("北京");          // 设置地图显示的城市 此项是必须设置的
        map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放
        delete window[callbackName]
      }
      script.src="http://api.map.baidu.com/api?v=2.0&ak=evDHwrRoILvlkrvaZEFiGp30&callback="+callbackName
      document.body.appendChild(script)
    }
  },
  mounted() {
    
    if(ui.getApp().xlcMess.mess){
      ui.navigateBack()
      return
    }else{
      console.log(ui.getApp().xlcMess);
      this.mapPot.lng = ui.getApp().xlcMess.latitude
      this.mapPot.lat = ui.getApp().xlcMess.longitude
      this.xlcMss = ui.getApp().xlcMess
    }
    this.build(this.mapPot)
  },
  created () {
  }
}
</script>

<style lang="less">
  .MapMess{
    background-color: #ff6c00;
  }
  .JxData{
    margin-top: 30rpx;
    padding: 20rpx 30rpx;
    background-color: #fff;
  }
  .xlcMessSty{
    padding: 20rpx 30rpx;
    background-color: #fff;
    .tit{
      font-size: 35rpx;
      font-weight: 700;
    }
    .messLeft{
      font-size: 40rpx;
      font-weight: 700;
      color: #ff6c00;

    }
    .messCenter{
      font-size: 30rpx;
      color: #b5b5b5;
      text-decoration: line-through;

    }
    .messRight{
      button{
        background: linear-gradient(#ff7e16,#ff4100);
        color: #fff;
        border: none;
        font-size: 24rpx;
        padding: 4rpx 25rpx;
      }

    }
  }




  .xlcSwiper{
    position: relative;
  }

  .swiper-slide {
      .ui-image {
        width: 100%;
    }
  }
  .xlcSwiper{
    .swiper-pagination {
      bottom: 30px;
    }
    .swiper-lazy-preloader {
        width: 24px;
        height: 24px;
        margin-left: -12px;
        margin-top: -12px;
      }
    .swiper-slide {
      position: relative;
      .slide-title {
        color:#fff;
        position: absolute;
        left: 0;
        right: 0;
        bottom: 0;
        text-align: center;
        height: 24px;
        line-height: 24px;
        font-size: 14px;
        background-color: rgba(51, 51, 51, .2);
      }
    }
  }

</style>
