<template>
  <ui-page style="background:#f2f2f2">
    <ui-nav-bar slot="nav-bar" custom-style="{{ {'background':'linear-gradient(to right, #4075FF 10% ,#29B6FD 80%, #32A8FE 100%)'} }}">
        <ui-row height="46">
          <ui-col width="10"></ui-col>
          <ui-col vertical-align="middle" align="center">
            <ui-view style="width:100%">
              <ui-input ui:model="{{ searchVal }}" 
              style="back"
              bindinput="handleInput" placeholder="监听input事件"></ui-input>
            </ui-view>
          </ui-col>
          <ui-col width="10"></ui-col>
          <ui-col vertical-align="middle" align="center"  width="70" bindtap="selt">
              <ui-view bindtap="showMask=true" style="color:#fff;font-weight: 700;">
                {{selectVal.txt}}
              </ui-view>
          </ui-col>
          <ui-col width="10"></ui-col>
        </ui-row>
    </ui-nav-bar>


    <ui-scroll-view scroll-y height="{{height}}" pull-down="{{ pullDown }}" pull-up="{{ pullUp }}" enable-reach-bottom-load ="{{loadMore}}" >
      <ui-view class="content_list">
        <ui-view style="background:#ffffff"
         ui:for="{{ items }}" class="{{{'grey-bg': index % 2 == 0}}}">
          <ui-row height="100" space-bottom="10">
            <ui-col span="3" align="center" vertical-align="middle">
                <ui-image src="../static/img/home/car0000.png" 
                 width="80" height="80"></ui-image>
            </ui-col>
            <ui-col span="9">
                <ui-row space-top='10' height="50">
                    <ui-col span="6">
                      王小明
                    </ui-col>
                    <ui-col span="5" align="right">
                      18812345678
                    </ui-col>
                </ui-row>
                <ui-row height="50">
                    <ui-col span="4">
                      是否缴费
                    </ui-col>
                    <ui-col span="4" align="left">
                      用户类型
                    </ui-col>
                    <ui-col span="3" align="right">
                      用户级别
                    </ui-col>
                </ui-row>
            </ui-col>
          </ui-row>
          
        </ui-view>
      </ui-view>
      <ui-view style="width:200px;margin:0 auto;">
        <ui-divider ui:show="{{!loadMore}}">没有新数据了</ui-divider>
      </ui-view>
    </ui-scroll-view>

    <ui-mask ui:model="showMask">
      <ui-view class="selectList box_row_list" style="height:100%;background:#ffffff">
        <ui-view class="selectItem" :class="index%3==0? 'bc_green' : index%3==1 ? 'bc_red' : 'bc_blue'"  
                 ui:for="{{selectList}}"
                 bindtap="getSeltItem(item,index)">
                 <ui-view class="selectItemTxT">
                    {{item.txt}}
                 </ui-view>
        </ui-view>
      </ui-view>
    </ui-mask>

  </ui-page>
</template>

<script>
  export default {
    config: {
      navigationBarTitleText: "下拉与到底加载",
      disableScroll:true,
      // navigationBarBorderColor: "rgba(231, 231, 231, 0.6)",
      // navigationBarBackgroundColor:"#FFFFFF",
      // navigationBarTextStyle:"black",
      // navigationBarTextStyle:"black"
    },
    data () {
      return {
        // Mask遮罩层
        showMask:false,
        selectVal:{
          txt:'全部',
          val:'07'
        },
        selectList:[{
          txt:'一级用户',
          val:'01',
        },{
          txt:'二级用户',
          val:'02',
        },{
          txt:'学院',
          val:'03',
        },{
          txt:'会员',
          val:'04',
        },{
          txt:'已交费',
          val:'05',
        },{
          txt:'未交费',
          val:'06',
        },{
          txt:'全部',
          val:'07',
        }],
        // Mask遮罩层END
        searchVal:"",
        items: [],
        bottom: 30,
        height: ui.DEFAULT_CONTENT_HEIGHT,
        pullDown: {
          distance: 50,
          onBegin: () => {},
          onActive: this.handleActive,
          onAfter: this.handlePullDownAfter
        },
        pullUp:{
          distance: 50,
          onBegin: () => {},
          onActive: this.handleLoadMore,
          onAfter: this.handlePullDownAfter
        },
        count:0,
        loadMore:true
      }
    },
    methods: {
      selt(){//类别选择

      },
      handleInput(){//search收索

      },
      getSeltItem(item,index){
        this.selectVal = item
        this.showMask=false
        console.log(item);
        console.log(index);
        
      },
      handleLoadMore () {
        this.count ++
        if(this.count > 10){
          this.loadMore = false
          return false
        }else{
          window.setTimeout(() => {
            for (let i = this.bottom + 1; i <= this.bottom + 10; i++) {
              this.items.push(`列表项目${i}`)
            }
            this.bottom += 10
          }, 1500)
        }

      },
      handleActive () {
        // 将返回的请求接管，实现让请求结果来控制下拉刷新的状态
        return ui.request({
          // promise设置为true，让请求返回promise，这样就可以接管请求
          // 请求结束后页面自动回弹
          promise: true,
          url: '/touchui-backstage/listInfo.do?state=1',
          success: (response) => {
          },
          fail: (err) => {
          }
        })
      },
      // 下拉结束后，执行的函数。因为只要下拉即时没有到达刷新的高度也会触发这个方法
      // flag 为1表示执行了handleActive。为undefined代表handleActive没有执行。
      handlePullDownAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理下拉刷新'
          })
        }
      },
      handlePullUpAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理上拉刷新'
          })
        }
      }
    },
    mounted () {
      for (let i = 1; i <= this.bottom; i++) {
        this.items.push(`列表项目${i}`)
      }
    } 
  }

</script>

<style lang="less">
  .selectList{
    padding: 50rpx;
    .selectItem{
      width:48%;
      color: #fff;
      text-align: center;
      font-size: 45rpx;
      font-weight: 700;
      margin: 1%;
      position: relative;
      .selectItemTxT{
        width: 100%;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%)
      }
    }
  }
  .bc_green{
    background-color: #7CC422;
  }
  .bc_red{
    background-color: #FFA060;
  }
  .bc_blue{
    background-color: #46D1E4;
  }
</style>