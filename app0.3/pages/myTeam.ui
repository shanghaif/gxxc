<template>
  <ui-page style="background:#f2f2f2">
    <ui-nav-bar slot="nav-bar" custom-style="{{ {'background':'linear-gradient(to right, #4075FF 10% ,#29B6FD 80%, #32A8FE 100%)'} }}">
        <ui-row height="46">
          <ui-col width="10"></ui-col>
          <ui-col vertical-align="middle" align="center">
            <ui-view class="findInput" style="width:100%" bindtap="handleInput">
              <ui-input ui:model="{{ searchVal }}" 
              bindinput="" placeholder="收索"></ui-input>
            </ui-view>
          </ui-col>
          <ui-col width="10"></ui-col>
          <ui-col vertical-align="middle" align="center"  width="70" bindtap="selt">
              <ui-view bindtap="popupshow=true" style="color:#fff;font-weight: 700;">
                {{selectVal[0] | typVal}}
              </ui-view>
          </ui-col>
          <ui-col width="10"></ui-col>
        </ui-row>
    </ui-nav-bar>


    <ui-scroll-view scroll-y height="{{height}}" pull-down="{{ pullDown }}" pull-up="{{ pullUp }}">
      <ui-view class="content_list">
        <ui-view style="background:#ffffff"
         ui:for="{{ items }}">
          <ui-row height="100" space-bottom="10">
            <ui-col span="3" align="center" vertical-align="middle">
                <ui-image src="../static/img/home/car0000.png" 
                 width="80" height="80"></ui-image>
            </ui-col>
            <ui-col span="9">
                <ui-row space-top='10' height="50">
                    <ui-col span="6">
                      王小明
                    </ui-col>
                    <ui-col span="5" align="right">
                      18812345678
                    </ui-col>
                </ui-row>
                <ui-row height="50">
                    <ui-col span="4">
                      已交费
                    </ui-col>
                    <ui-col span="4" align="left">
                      会员
                    </ui-col>
                    <ui-col span="3" align="right">
                     一级用户
                    </ui-col>
                </ui-row>
            </ui-col>
          </ui-row>
          
        </ui-view>
      </ui-view>
      <ui-view style="width:200px;margin:0 auto;">
        <ui-divider ui:show="{{!loadMore}}">没有新数据了</ui-divider>
      </ui-view>
    </ui-scroll-view>


    <ui-popup ui:model="{{popupshow}}" position="top">
      <ui-view class="top_pop">
        <ui-view class="checkTit">
          <ui-tabs index="{{ 0 }}">
              <ui-tab>区域选着</ui-tab>
          </ui-tabs>
        </ui-view>

        <ui-scroll-view scroll-y="scroll-y">
          <ui-check-list max="1" 
          label-position="left" 
          options="{{ selectList }}" 
          type="plain" 
          ui:model="{{ selectVal}}" 
          bindchange="change" color="#3AC3B0"></ui-check-list>
        </ui-scroll-view>
      </ui-view>
    </ui-popup>

  </ui-page>
</template>

<script>
  export default {
    config: {
      navigationStyle: 'custom',
      navigationBarBackgroundColor:"#26a2ff",
      navigationBarTitleText: "团队",
      navigationBarTextStyle:"white",
      title:'团队',
      backgroundColor:'#f2f2f2',
      delay:false,//延迟加载
    },
    computed:{
      searchValue(){
        return ui.getApp().searchValue
      }
    },
    watch:{
      searchValue:function(n,o){
        this.searchVal = n
        console.log(n)
        console.log(o)

      }
    },
    data () {
      return {
        popupshow:false,

        selectVal:[
             '07'
        ],
        selectList:[{
          value:'全部',
          key:'07',
        },{
          value:'一级用户',
          key:'01',
        },{
          value:'二级用户',
          key:'02',
        },{
          value:'学员',
          key:'03',
        },{
          value:'会员',
          key:'04',
        },{
          value:'已交费',
          key:'05',
        },{
          value:'未交费',
          key:'06',
        }],
        // Mask遮罩层END
        searchVal:'',
        items: [],
        bottom: 30,
        height: ui.DEFAULT_CONTENT_HEIGHT,
        pullDown: {
          distance: 50,
          onBegin: () => {},
          onActive: this.handleActive,
          onAfter: this.handlePullDownAfter
        },
        pullUp:{
          distance: 50,
          onBegin: () => {},
          onActive: this.handleLoadMore,
          onAfter: this.handlePullUpAfter
        },
        count:0,
        loadMore:true
      }
    },
    filters: {
      typVal:(val) =>{
        switch (val) {
          case '01':
            return '一级用户';
            break;
          case '02':
            return '二级用户';
            break;
          case '03':
            return '学员';
            break;
          case '04':
            return '会员';
            break;
          case '05':
            return '已交费';
            break;
          case '06':
            return '未交费';
            break;
          case '07':
            return '全部';
            break;
          default:
            return '用户类型'
            break;
        }
      }
    },
    methods: {
      change(val){
        console.log(val);
        console.log(this.checklist);
        this.popupshow = false
        
      },
      selt(){//类别选择

      },
      handleInput(){//search收索
        ui.getApp().globalData.searchShow = true
      },
      getSeltItem(item,index){
        this.selectVal = item
        this.showMask=false
        console.log(item);
        console.log(index);
        
      },
      handleLoadMore () {
        ui.showToast({
            title: '上啦'
          })
        this.count ++
        if(this.count > 10){
          this.loadMore = false
          return false
        }else{
          window.setTimeout(() => {
            for (let i = this.bottom + 1; i <= this.bottom + 10; i++) {
              this.items.push(`列表项目${i}`)
            }
            this.bottom += 10
          }, 1500)
        }
      },
      handleActive () {
        // 将返回的请求接管，实现让请求结果来控制下拉刷新的状态
        return ui.request({
          // promise设置为true，让请求返回promise，这样就可以接管请求
          // 请求结束后页面自动回弹
          promise: true,
          url: '/touchui-backstage/listInfo.do?state=1',
          success: (response) => {
          },
          fail: (err) => {
          }
        })
      },
      // 下拉结束后，执行的函数。因为只要下拉即时没有到达刷新的高度也会触发这个方法
      // flag 为1表示执行了handleActive。为undefined代表handleActive没有执行。
      handlePullDownAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理下拉刷新'
          })
        }
      },
      handlePullUpAfter (flag) {
        if (flag) {
          ui.showToast({
            title: '处理上拉刷新'
          })
        }
      }
    },
    mounted () {
      for (let i = 1; i <= this.bottom; i++) {
        this.items.push(`列表项目${i}`)
      }
    } 
  }

</script>

<style lang="less">
  .findInput{
    .ui-input{
    }
  }
</style>